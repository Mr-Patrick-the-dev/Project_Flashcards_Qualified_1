{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Deck\\\\DeckCards.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteCard } from \"../utils/api/index\";\n/*This function will:\r\n    1)Take in cards and URL (for buttons)\r\n    2)Map through them and return the JSX for each card\r\n        Buttons should include:\r\n            Edit card\r\n            Delete\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowCards({\n  cards,\n  url\n}) {\n  _s();\n\n  //Call history for use later\n  const history = useHistory(); //delete handler\n\n  async function deleteHandler(card) {\n    //Abort controller for deleteDeck API call\n    const abortController = new AbortController(); //Confirm window to make sure they want to delete deck\n\n    const confirm = window.confirm(\"Do you want to delete this deck?\"); //If \"ok\" clicked, delete the deck and refresh the home screen\n\n    if (confirm) {\n      deleteCard(card.id, abortController.signal);\n      history.push({\n        url\n      });\n      return () => abortController.abort();\n    } else {\n      history.push({\n        url\n      });\n    }\n\n    ;\n  }\n\n  ;\n  console.log(cards);\n  const deckCards = cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: card.front\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: card.back\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push(`${url}${card.id}/edit`),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteHandler(card),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), deckCards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowCards, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ShowCards;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowCards\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Deck/DeckCards.js"],"names":["React","useHistory","deleteCard","ShowCards","cards","url","history","deleteHandler","card","abortController","AbortController","confirm","window","id","signal","push","abort","console","log","deckCards","map","index","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnB,EAAkC;AAAA;;AAE7C;AACA,QAAMC,OAAO,GAAGL,UAAU,EAA1B,CAH6C,CAK7C;;AACA,iBAAeM,aAAf,CAA6BC,IAA7B,EAAmC;AAE/B;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CAH+B,CAK/B;;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,kCAAf,CAAhB,CAN+B,CAQ/B;;AACA,QAAIA,OAAJ,EAAa;AACTT,MAAAA,UAAU,CAACM,IAAI,CAACK,EAAN,EAAUJ,eAAe,CAACK,MAA1B,CAAV;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa;AAACV,QAAAA;AAAD,OAAb;AAEA,aAAO,MAAMI,eAAe,CAACO,KAAhB,EAAb;AACH,KALD,MAKO;AACHV,MAAAA,OAAO,CAACS,IAAR,CAAa;AAACV,QAAAA;AAAD,OAAb;AACH;;AAAA;AACJ;;AAAA;AAEDY,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,QAAMe,SAAS,GAAGf,KAAK,CAACgB,GAAN,CAAU,CAACZ,IAAD,EAAOa,KAAP,kBACpB;AAAA,4BACI;AAAA,gBAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKd,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMjB,OAAO,CAACS,IAAR,CAAc,GAAEV,GAAI,GAAEG,IAAI,CAACK,EAAG,OAA9B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMN,aAAa,CAACC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,KAASa,KAAT;AAAA;AAAA;AAAA;AAAA,UADU,CAAlB;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA1CuBhB,S;UAGJF,U;;;KAHIE,S;AA0CvB","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteCard } from \"../utils/api/index\";\r\n\r\n/*This function will:\r\n    1)Take in cards and URL (for buttons)\r\n    2)Map through them and return the JSX for each card\r\n        Buttons should include:\r\n            Edit card\r\n            Delete\r\n*/\r\nexport default function ShowCards({ cards, url }){\r\n\r\n    //Call history for use later\r\n    const history = useHistory();\r\n\r\n    //delete handler\r\n    async function deleteHandler(card) {\r\n\r\n        //Abort controller for deleteDeck API call\r\n        const abortController = new AbortController()\r\n\r\n        //Confirm window to make sure they want to delete deck\r\n        const confirm = window.confirm(\"Do you want to delete this deck?\");\r\n\r\n        //If \"ok\" clicked, delete the deck and refresh the home screen\r\n        if (confirm) {\r\n            deleteCard(card.id, abortController.signal);\r\n            history.push({url});\r\n\r\n            return () => abortController.abort();\r\n        } else {\r\n            history.push({url});\r\n        };\r\n    };\r\n\r\n    console.log(cards)\r\n    const deckCards = cards.map((card, index) => (\r\n            <tr key={index}>\r\n                <td>{card.front}</td>\r\n                <td>{card.back}</td>\r\n                <button onClick={() => history.push(`${url}${card.id}/edit`)}>Edit</button>\r\n                <button onClick={() => deleteHandler(card)}>Delete</button>\r\n                <br />\r\n            </tr>\r\n    ))\r\n\r\n    return (\r\n        <table>\r\n            <th>Cards</th>\r\n            {deckCards}\r\n        </table>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}