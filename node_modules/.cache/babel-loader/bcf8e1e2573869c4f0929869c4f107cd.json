{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api/index\";\nimport DeckDisplay from \"./DeckDisplay\"; //import \"./Home.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  //Initial state for decks\n  const initialDecks = []; //Set state for decks\n\n  const [decks, setDecks] = useState(initialDecks); //Load history\n\n  const history = useHistory(); //Load the decks and cards to be displayed after initial render\n\n  useEffect(() => {\n    //Set decks And Cards to empty values\n    setDecks(initialDecks); //Abort controller for API fetch\n    //Load the cards and decks\n\n    async function getDecks() {\n      const pulledDecks = await listDecks(abortController.signal);\n      setDecks(pulledDecks);\n    }\n\n    ; //Call getDecksAndCards\n\n    getDecks();\n  }, []); //Check to see if decks is empty\n\n  if (decks) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => history.push(\"/decks/new\"),\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeckDisplay, {\n        decks: decks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  } else {\n    //No decks\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"...Loading Decks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n\n  ;\n}\n\n_s(HomePage, \"CK7EdaxXWMi7r5j4YQJuIB4oAH4=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Home/Home.js"],"names":["React","useEffect","useState","useHistory","listDecks","DeckDisplay","HomePage","initialDecks","decks","setDecks","history","getDecks","pulledDecks","abortController","signal","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B;AACA,QAAMC,YAAY,GAAG,EAArB,CAF+B,CAI/B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,YAAD,CAAlC,CAL+B,CAO/B;;AACA,QAAMG,OAAO,GAAGP,UAAU,EAA1B,CAR+B,CAU/B;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAQ,IAAAA,QAAQ,CAACF,YAAD,CAAR,CAFY,CAIZ;AAGA;;AACA,mBAAeI,QAAf,GAA0B;AAElB,YAAMC,WAAW,GAAG,MAAMR,SAAS,CAACS,eAAe,CAACC,MAAjB,CAAnC;AACAL,MAAAA,QAAQ,CAACG,WAAD,CAAR;AAEP;;AAAA,KAbW,CAeZ;;AACAD,IAAAA,QAAQ;AAGX,GAnBQ,EAmBP,EAnBO,CAAT,CAX+B,CAiC/B;;AACA,MAAIH,KAAJ,EAAW;AACP,wBACI;AAAA,8BACA;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAE,MAAME,OAAO,CAACK,IAAR,CAAa,YAAb,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD,MAUO;AACH;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAAA;AACJ;;GAhDuBF,Q;UAQJH,U;;;KARIG,Q;AAgDvB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { listDecks } from \"../utils/api/index\";\r\nimport DeckDisplay from \"./DeckDisplay\";\r\n//import \"./Home.css\";\r\n\r\nexport default function HomePage() {\r\n    //Initial state for decks\r\n    const initialDecks = [];\r\n\r\n    //Set state for decks\r\n    const [decks, setDecks] = useState(initialDecks);\r\n\r\n    //Load history\r\n    const history = useHistory();\r\n\r\n    //Load the decks and cards to be displayed after initial render\r\n    useEffect(() => {\r\n        //Set decks And Cards to empty values\r\n        setDecks(initialDecks);\r\n\r\n        //Abort controller for API fetch\r\n        \r\n\r\n        //Load the cards and decks\r\n        async function getDecks() {\r\n            \r\n                const pulledDecks = await listDecks(abortController.signal)\r\n                setDecks(pulledDecks);\r\n             \r\n        };\r\n\r\n        //Call getDecksAndCards\r\n        getDecks()\r\n\r\n        \r\n    },[]);\r\n\r\n\r\n    //Check to see if decks is empty\r\n    if (decks) {\r\n        return (\r\n            <div>\r\n            <button\r\n            type=\"button\"\r\n            onClick={() => history.push(\"/decks/new\")}>Create Deck</button>\r\n            <hr />\r\n            <DeckDisplay decks={decks} />\r\n            </div>\r\n        )\r\n    } else {\r\n        //No decks\r\n        return <h3>...Loading Decks</h3>\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}