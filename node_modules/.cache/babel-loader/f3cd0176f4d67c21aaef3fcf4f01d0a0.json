{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Deck\\\\ShowDeck.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api/index\";\n/*\r\n    This function will:\r\n        1)Take in deck and url (for buttons)\r\n        2)Display the name and description of the deck\r\n        3)Provide buttons for:\r\n            Edit\r\n            Study\r\n            Add cards\r\n            Delete\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowDeck({\n  deck,\n  url\n}) {\n  _s();\n\n  //delete handler\n  async function deleteHandler(deck) {\n    //Abort controller for deleteDeck API call\n    const abortController = new AbortController(); //Confirm window to make sure they want to delete deck\n\n    const confirm = window.confirm(\"Do you want to delete this deck?\"); //If \"ok\" clicked, delete the deck and refresh the home screen\n\n    if (confirm) {\n      deleteDeck(deck.id, abortController.signal).then(result => history.push(\"/\"));\n      return () => abortController.abort();\n    } else {\n      history.push({\n        url\n      });\n    }\n\n    ;\n  }\n\n  ; //Call history to use later\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push(`${url}/edit`),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push(`${url}/study`),\n      children: \"Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push`${url}/cards/new`,\n      children: \"Add Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteHandler(deck),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ShowDeck, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ShowDeck;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDeck\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Deck/ShowDeck.js"],"names":["React","useHistory","deleteDeck","ShowDeck","deck","url","deleteHandler","abortController","AbortController","confirm","window","id","signal","then","result","history","push","abort","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAAiC;AAAA;;AAE5C;AACA,iBAAeC,aAAf,CAA6BF,IAA7B,EAAmC;AAE/B;AACA,UAAMG,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CAH+B,CAK/B;;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,kCAAf,CAAhB,CAN+B,CAQ/B;;AACA,QAAIA,OAAJ,EAAa;AACTP,MAAAA,UAAU,CAACE,IAAI,CAACO,EAAN,EAAUJ,eAAe,CAACK,MAA1B,CAAV,CAA4CC,IAA5C,CAAkDC,MAAD,IAAYC,OAAO,CAACC,IAAR,CAAa,GAAb,CAA7D;AAEA,aAAO,MAAMT,eAAe,CAACU,KAAhB,EAAb;AACH,KAJD,MAIO;AACHF,MAAAA,OAAO,CAACC,IAAR,CAAa;AAACX,QAAAA;AAAD,OAAb;AACH;;AAAA;AACJ;;AAAA,GAnB2C,CAqB5C;;AACA,QAAMU,OAAO,GAAGd,UAAU,EAA1B;AACA,sBACI;AAAA,4BACA;AAAA,gBAAKG,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBAAId,IAAI,CAACe;AAAT;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,MAAIJ,OAAO,CAACC,IAAR,CAAc,GAAEX,GAAI,OAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAQ,MAAA,OAAO,EAAE,MAAIU,OAAO,CAACC,IAAR,CAAc,GAAEX,GAAI,QAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAQ,MAAA,OAAO,EAAE,MAAIU,OAAO,CAACC,IAAK,GAAEX,GAAI,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAQ,MAAA,OAAO,EAAE,MAAKC,aAAa,CAACF,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADJ;AAUH;;GAjCuBD,Q;UAsBJF,U;;;KAtBIE,Q;AAiCvB","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../utils/api/index\";\r\n\r\n/*\r\n    This function will:\r\n        1)Take in deck and url (for buttons)\r\n        2)Display the name and description of the deck\r\n        3)Provide buttons for:\r\n            Edit\r\n            Study\r\n            Add cards\r\n            Delete\r\n*/\r\n\r\nexport default function ShowDeck({ deck, url }) {\r\n\r\n    //delete handler\r\n    async function deleteHandler(deck) {\r\n\r\n        //Abort controller for deleteDeck API call\r\n        const abortController = new AbortController()\r\n\r\n        //Confirm window to make sure they want to delete deck\r\n        const confirm = window.confirm(\"Do you want to delete this deck?\");\r\n\r\n        //If \"ok\" clicked, delete the deck and refresh the home screen\r\n        if (confirm) {\r\n            deleteDeck(deck.id, abortController.signal).then((result) => history.push(\"/\"));\r\n\r\n            return () => abortController.abort();\r\n        } else {\r\n            history.push({url});\r\n        };\r\n    };\r\n\r\n    //Call history to use later\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <h3>{deck.name}</h3>\r\n        <p>{deck.description}</p>\r\n        <button onClick={()=>history.push(`${url}/edit`)}>Edit</button>\r\n        <button onClick={()=>history.push(`${url}/study`)}>Study</button>\r\n        <button onClick={()=>history.push`${url}/cards/new`}>Add Cards</button>\r\n        <button onClick={()=>(deleteHandler(deck))}>Delete</button>\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}