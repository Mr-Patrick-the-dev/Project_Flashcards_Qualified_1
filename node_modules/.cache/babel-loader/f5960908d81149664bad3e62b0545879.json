{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Home\\\\DeckDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CardCount from \"./CardCount\";\nimport { deleteDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckDisplay({\n  decks\n}) {\n  _s();\n\n  //Pull history to use for buttons\n  const history = useHistory(); //Delete handler for deck\n\n  async function deleteHandler(deck) {\n    //Abort controller for deleteDeck API call\n    const abortController = new AbortController(); //Confirm window to make sure they want to delete deck\n\n    const confirm = window.confirm(\"Do you want to delete this deck?\"); //If \"ok\" clicked, delete the deck and refresh the home screen\n\n    if (confirm) {\n      deleteDeck(deck.id, abortController.signal());\n      window.location.reload();\n      return () => abortController.abort();\n    } else {\n      history.push(\"/\");\n    }\n\n    ;\n  }\n\n  ; //Map through decks to display each deck\n\n  const decksDisplayed = decks.map(deck => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardCount, {\n      deckId: deck.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => history.push(`/decks/${deck.id}/`),\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => history.push(`/decks/${deck.id}/study`),\n      children: \"Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"buton\", {\n      type: \"button\",\n      onClick: () => deleteHandler(deck),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this)); //Return the decks in a div; add card class later\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decksDisplayed\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckDisplay, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckDisplay;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckDisplay\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Home/DeckDisplay.js"],"names":["React","useHistory","CardCount","deleteDeck","DeckDisplay","decks","history","deleteHandler","deck","abortController","AbortController","confirm","window","id","signal","location","reload","abort","push","decksDisplayed","map","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAgC;AAAA;;AAC3C;AACA,QAAMC,OAAO,GAAGL,UAAU,EAA1B,CAF2C,CAI3C;;AACA,iBAAeM,aAAf,CAA6BC,IAA7B,EAAmC;AAE/B;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CAH+B,CAK/B;;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,kCAAf,CAAhB,CAN+B,CAQ/B;;AACA,QAAIA,OAAJ,EAAa;AACTR,MAAAA,UAAU,CAACK,IAAI,CAACK,EAAN,EAAUJ,eAAe,CAACK,MAAhB,EAAV,CAAV;AACAF,MAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AAEA,aAAO,MAAMP,eAAe,CAACQ,KAAhB,EAAb;AACH,KALD,MAKO;AACHX,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACH;;AAAA;AACJ;;AAAA,GAtB0C,CAwB3C;;AACA,QAAMC,cAAc,GAAGd,KAAK,CAACe,GAAN,CAAWZ,IAAD,iBAC7B;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACA;AAAA,gBAAKA,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEb,IAAI,CAACK;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,gBAAIL,IAAI,CAACc;AAAT;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,OAAO,EAAE,MAAMhB,OAAO,CAACY,IAAR,CAAc,UAASV,IAAI,CAACK,EAAG,GAA/B,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAOA;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,OAAO,EAAE,MAAMP,OAAO,CAACY,IAAR,CAAc,UAASV,IAAI,CAACK,EAAG,QAA/B,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAUA;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,OAAO,EAAE,MAAMN,aAAa,CAACC,IAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmB,CAAvB,CAzB2C,CA0C3C;;AACA,sBACI;AAAA,cAAMW;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA9CuBf,W;UAEJH,U;;;KAFIG,W;AA8CvB","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CardCount from \"./CardCount\";\r\nimport { deleteDeck } from \"../utils/api/index\";\r\n\r\nexport default function DeckDisplay({ decks }) {\r\n    //Pull history to use for buttons\r\n    const history = useHistory();\r\n\r\n    //Delete handler for deck\r\n    async function deleteHandler(deck) {\r\n\r\n        //Abort controller for deleteDeck API call\r\n        const abortController = new AbortController()\r\n\r\n        //Confirm window to make sure they want to delete deck\r\n        const confirm = window.confirm(\"Do you want to delete this deck?\");\r\n\r\n        //If \"ok\" clicked, delete the deck and refresh the home screen\r\n        if (confirm) {\r\n            deleteDeck(deck.id, abortController.signal());\r\n            window.location.reload();\r\n\r\n            return () => abortController.abort();\r\n        } else {\r\n            history.push(\"/\")\r\n        };\r\n    };\r\n    \r\n    //Map through decks to display each deck\r\n    const decksDisplayed = decks.map((deck) => (\r\n        <div className=\"card\">\r\n        <h3>{deck.name}</h3>\r\n        <CardCount deckId={deck.id} />\r\n        <p>{deck.description}</p>\r\n        <button\r\n        type=\"button\" \r\n        onClick={() => history.push(`/decks/${deck.id}/`)}>View</button>\r\n        <button \r\n        type=\"button\" \r\n        onClick={() => history.push(`/decks/${deck.id}/study`)}>Study</button>\r\n        <buton\r\n        type=\"button\"\r\n        onClick={() => deleteHandler(deck)}>Delete</buton>\r\n        </div>\r\n    ));\r\n\r\n    //Return the decks in a div; add card class later\r\n    return (\r\n        <div>{decksDisplayed}</div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}