{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\AddCard\\\\CardForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewCardForm({\n  deckId,\n  card,\n  cardFunction\n}) {\n  _s();\n\n  //deck will have either the pre-filled default deck (new) or the current deck info (edit)\n  //Grab history for later use\n  const history = useHistory(); //Set new blank deck state\n\n  [newCard, setNewCard] = useState(card); //changeHandler\n\n  const changeHandler = ({\n    target\n  }) => {\n    setNewDCard({ ...newCard,\n      [target.name]: target.value\n    });\n  }; //submitHandler\n\n\n  const submitHandler = (event, newCard) => {\n    event.preventDefault(); //Abort controller for deckFunction API call\n\n    const abortController = new AbortController(); //use function passed from page\n\n    const submittedCard = cardFunction(newCard, abortController.signal());\n    setNewCard(card);\n    history.push(`/decks/${deckId}/cards/new`); //Abort controller\n\n    return () => abortController.abort();\n  };\n\n  returns( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler(newCard),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"front\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"front\",\n          name: \"front\",\n          type: \"textarea\",\n          onChange: changeHandler,\n          value: newCard.front,\n          placeholder: card.front,\n          children: \"Front:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"back\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"back\",\n          name: \"back\",\n          type: \"textarea\",\n          onChange: changeHandler,\n          value: newCard.back,\n          placeholder: card.back,\n          children: \"Back:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false));\n}\n\n_s(NewCardForm, \"Az2MUUM36yk4lD4TSAKomXJNi7s=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewCardForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCardForm\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/AddCard/CardForm.js"],"names":["React","useState","useHistory","NewCardForm","deckId","card","cardFunction","history","newCard","setNewCard","changeHandler","target","setNewDCard","name","value","submitHandler","event","preventDefault","abortController","AbortController","submittedCard","signal","push","abort","returns","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAArB,EAAqD;AAAA;;AAChE;AAEA;AACA,QAAMC,OAAO,GAAGL,UAAU,EAA1B,CAJgE,CAMhE;;AACA,GAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACI,IAAD,CAAhC,CAPgE,CAShE;;AACA,QAAMK,aAAa,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAClCC,IAAAA,WAAW,CAAC,EACR,GAAGJ,OADK;AAER,OAACG,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFd,KAAD,CAAX;AAIH,GALD,CAVgE,CAiBhE;;;AACA,QAAMC,aAAa,GAAG,CAACC,KAAD,EAAQR,OAAR,KAAoB;AACtCQ,IAAAA,KAAK,CAACC,cAAN,GADsC,CAGtC;;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CAJsC,CAMtC;;AACA,UAAMC,aAAa,GAAGd,YAAY,CAACE,OAAD,EAAUU,eAAe,CAACG,MAAhB,EAAV,CAAlC;AACAZ,IAAAA,UAAU,CAACJ,IAAD,CAAV;AACAE,IAAAA,OAAO,CAACe,IAAR,CAAc,UAASlB,MAAO,YAA9B,EATsC,CAWtC;;AACA,WAAO,MAAMc,eAAe,CAACK,KAAhB,EAAb;AACH,GAbD;;AAeAC,EAAAA,OAAO,eACH;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAET,aAAa,CAACP,OAAD,CAA7B;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,+BACI;AACA,UAAA,EAAE,EAAC,OADH;AAEA,UAAA,IAAI,EAAC,OAFL;AAGA,UAAA,IAAI,EAAC,UAHL;AAIA,UAAA,QAAQ,EAAEE,aAJV;AAKA,UAAA,KAAK,EAAEF,OAAO,CAACiB,KALf;AAMA,UAAA,WAAW,EAAEpB,IAAI,CAACoB,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,+BACI;AACA,UAAA,EAAE,EAAC,MADH;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,IAAI,EAAC,UAHL;AAIA,UAAA,QAAQ,EAAEf,aAJV;AAKA,UAAA,KAAK,EAAEF,OAAO,CAACkB,IALf;AAMA,UAAA,WAAW,EAAErB,IAAI,CAACqB,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAwBI;AAAQ,QAAA,OAAO,EAAE,MAAMnB,OAAO,CAACe,IAAR,CAAa,GAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADG,CAAP;AA8BH;;GA/DuBnB,W;UAIJD,U;;;KAJIC,W;AA+DvB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function NewCardForm({ deckId, card, cardFunction }) {\r\n    //deck will have either the pre-filled default deck (new) or the current deck info (edit)\r\n\r\n    //Grab history for later use\r\n    const history = useHistory();\r\n\r\n    //Set new blank deck state\r\n    [newCard, setNewCard] = useState(card);\r\n\r\n    //changeHandler\r\n    const changeHandler = ({ target }) => {\r\n        setNewDCard({\r\n            ...newCard,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    //submitHandler\r\n    const submitHandler = (event, newCard) => {\r\n        event.preventDefault();\r\n\r\n        //Abort controller for deckFunction API call\r\n        const abortController = new AbortController()\r\n\r\n        //use function passed from page\r\n        const submittedCard = cardFunction(newCard, abortController.signal());\r\n        setNewCard(card);\r\n        history.push(`/decks/${deckId}/cards/new`);\r\n\r\n        //Abort controller\r\n        return () => abortController.abort();\r\n    }\r\n\r\n    returns (\r\n        <>\r\n        <form onSubmit={submitHandler(newCard)}>\r\n            <label htmlFor=\"front\">\r\n                <input\r\n                id=\"front\"\r\n                name=\"front\"\r\n                type=\"textarea\"\r\n                onChange={changeHandler}\r\n                value={newCard.front}\r\n                placeholder={card.front}>\r\n                    Front:\r\n                </input>\r\n            </label>\r\n            <label htmlFor=\"back\">\r\n                <input\r\n                id=\"back\"\r\n                name=\"back\"\r\n                type=\"textarea\"\r\n                onChange={changeHandler}\r\n                value={newCard.back}\r\n                placeholder={card.back}>\r\n                    Back:\r\n                </input>\r\n            </label>\r\n            <button type=\"submit\">Submit</button>\r\n            <button onClick={() => history.push(\"/\")}>Cancel</button>\r\n        </form>\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}