{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Study\\\\StudyCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyCards({\n  cards\n}) {\n  _s();\n\n  console.log(cards); //Create initial card state\n\n  const initialCard = {\n    number: 1,\n    side: \"front\"\n  }; //Set card state\n\n  const [studyCard, setStudyCard] = useState(initialCard); //Get history for later use\n\n  const history = useHistory();\n  console.log(cards); //Next card click function\n\n  const nextCard = () => {\n    //Check if studyCard.number < cards length\n    if (studyCard.number < cards.length) {\n      //Add to studyCard number and switch the side to back\n      setStudyCard({ ...studyCard,\n        number: studyCard.number + 1,\n        side: \"front\"\n      });\n    } else {\n      //StudyCard number is equal to cards length\n      const confirm = window.confirm(\"Do you want to restart?\"); //Check user input for confirm\n\n      if (confirm) {\n        setStudyCard(initialCard);\n      } else {\n        setStudyCard(initialCard);\n        history.push(\"/\");\n      }\n\n      ;\n    }\n\n    ;\n  }; //Iterate through cards\n\n\n  for (let i = 0; i < cards.length; i++) {\n    const card = cards[i]; //Check that card id matches with studyCard id\n\n    if (card.id === studyCard.number) {\n      //Check studyCard side\n      if (studyCard.side === \"front\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Card \", studyCard.number, \" of \", cards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStudyCard({ ...studyCard,\n              side: \"back\"\n            }),\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this);\n      } else {\n        //Side = back\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Card \", studyCard.number, \" of \", cards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.back\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStudyCard({ ...studyCard,\n              side: \"front\"\n            }),\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => nextCard(),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  ;\n}\n\n_s(StudyCards, \"BQveN9hKU1KEcKSgRfz2l31eMWc=\", false, function () {\n  return [useHistory];\n});\n\n_c = StudyCards;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCards\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Study/StudyCards.js"],"names":["React","useState","useEffect","useHistory","StudyCards","cards","console","log","initialCard","number","side","studyCard","setStudyCard","history","nextCard","length","confirm","window","push","i","card","id","front","back"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function StudyCards({ cards }) {\r\n\r\n\r\n    console.log(cards)\r\n    //Create initial card state\r\n    const initialCard = {number: 1, side:\"front\"};\r\n\r\n    //Set card state\r\n    const [studyCard, setStudyCard] = useState(initialCard);\r\n\r\n    //Get history for later use\r\n    const history = useHistory();\r\n    \r\n    console.log(cards)\r\n    //Next card click function\r\n    const nextCard = () => {\r\n        //Check if studyCard.number < cards length\r\n        if(studyCard.number < cards.length) {\r\n            //Add to studyCard number and switch the side to back\r\n            setStudyCard({...studyCard, number: studyCard.number+1, side: \"front\"});\r\n        } else {\r\n            //StudyCard number is equal to cards length\r\n            const confirm = window.confirm(\"Do you want to restart?\");\r\n\r\n            //Check user input for confirm\r\n            if (confirm) {\r\n                setStudyCard(initialCard);\r\n            }\r\n            else {\r\n                setStudyCard(initialCard);\r\n                history.push(\"/\");\r\n            };\r\n        };\r\n    };\r\n\r\n    \r\n    //Iterate through cards\r\n    for (let i=0; i<cards.length; i++) {\r\n        const card = cards[i];\r\n        \r\n        //Check that card id matches with studyCard id\r\n        if(card.id === studyCard.number) {\r\n\r\n            //Check studyCard side\r\n            if(studyCard.side===\"front\") {\r\n\r\n                return (\r\n                    <div>\r\n                        <h4>Card {studyCard.number} of {cards.length}</h4>\r\n                        <p>{card.front}</p>\r\n                        <button onClick={()=> \r\n                            setStudyCard({...studyCard, side: \"back\"})}>\r\n                                Flip\r\n                        </button>\r\n                    </div>\r\n                );\r\n            } else {\r\n                //Side = back\r\n\r\n                return (\r\n                    <div>\r\n                        <h4>Card {studyCard.number} of {cards.length}</h4>\r\n                        <p>{card.back}</p>\r\n                        <button onClick={() =>\r\n                            setStudyCard({...studyCard, side: \"front\"})}>\r\n                                Flip\r\n                        </button>\r\n                        <button onClick={() =>nextCard()}>\r\n                                Next\r\n                        </button>\r\n                    </div>\r\n                );\r\n            };\r\n        };\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}