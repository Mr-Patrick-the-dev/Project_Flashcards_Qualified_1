{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Home\\\\CardCount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { listCards } from \"../utils/api/index\"; // Component to return number of cards in deck\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardCount({\n  deckId\n}) {\n  _s();\n\n  //Initial cards to reset cards each re-render\n  const initialCards = []; //State for cards for each deck\n\n  const [cards, setCards] = useState(initialCards); //useEffect to run each time deckId changes\n  //Updates cards state for that deck\n\n  useEffect(() => {\n    //Set Cards to empty values\n    setCards(initialCards); //Load the cards\n\n    async function getCards(deckId) {\n      const pulledCards = await listCards(deckId);\n      setCards(pulledCards);\n    }\n\n    ; //Call getCards\n\n    getCards(deckId);\n  });\n  return /*#__PURE__*/_jsxDEV(\"h5\", {\n    children: [cards.length, \" cards\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CardCount, \"RFZNOatQGYMqzj4Spzmkw3EOGUY=\");\n\n_c = CardCount;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCount\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Home/CardCount.js"],"names":["React","useEffect","useState","listCards","CardCount","deckId","initialCards","cards","setCards","getCards","pulledCards","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,oBAA1B,C,CAEA;;;AACA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+B;AAAA;;AAC1C;AACA,QAAMC,YAAY,GAAG,EAArB,CAF0C,CAI1C;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,YAAD,CAAlC,CAL0C,CAO1C;AACI;;AACJL,EAAAA,SAAS,CAAC,MAAM;AAEX;AACAO,IAAAA,QAAQ,CAACF,YAAD,CAAR,CAHW,CAOX;;AACA,mBAAeG,QAAf,CAAwBJ,MAAxB,EAAgC;AAExB,YAAMK,WAAW,GAAG,MAAMP,SAAS,CAACE,MAAD,CAAnC;AACAG,MAAAA,QAAQ,CAACE,WAAD,CAAR;AAEP;;AAAA,KAbU,CAeX;;AACAD,IAAAA,QAAQ,CAACJ,MAAD,CAAR;AAGJ,GAnBQ,CAAT;AAuBA,sBAAO;AAAA,eAAKE,KAAK,CAACI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAjCuBP,S;;KAAAA,S;AAiCvB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { listCards } from \"../utils/api/index\";\r\n\r\n// Component to return number of cards in deck\r\nexport default function CardCount({ deckId }) {\r\n    //Initial cards to reset cards each re-render\r\n    const initialCards = [];\r\n\r\n    //State for cards for each deck\r\n    const [cards, setCards] = useState(initialCards);\r\n    \r\n    //useEffect to run each time deckId changes\r\n        //Updates cards state for that deck\r\n    useEffect(() => {\r\n\r\n         //Set Cards to empty values\r\n         setCards(initialCards);\r\n\r\n         \r\n \r\n         //Load the cards\r\n         async function getCards(deckId) {\r\n             \r\n                 const pulledCards = await listCards(deckId);\r\n                 setCards(pulledCards);\r\n             \r\n         };\r\n \r\n         //Call getCards\r\n         getCards(deckId)\r\n \r\n         \r\n    });\r\n\r\n\r\n\r\n    return <h5>{cards.length} cards</h5>\r\n};"]},"metadata":{},"sourceType":"module"}