{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Deck\\\\DeckCards.js\";\nimport React from \"react\";\nimport { deleteCard } from \"../utils/api/index\";\n/*This function will:\r\n    1)Take in cards and URL (for buttons)\r\n    2)Map through them and return the JSX for each card\r\n        Buttons should include:\r\n            Edit card\r\n            Delete\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowCards({\n  cards,\n  url,\n  history\n}) {\n  //delete handler\n  async function deleteHandler(card) {\n    //Abort controller for deleteDeck API call\n    const abortController = new AbortController(); //Confirm window to make sure they want to delete deck\n\n    const confirm = window.confirm(\"Do you want to delete this deck?\"); //If \"ok\" clicked, delete the deck and refresh the home screen\n\n    if (confirm) {\n      deleteCard(card.id, abortController.signal);\n      window.location.reload();\n      return () => abortController.abort();\n    } else {\n      history.push({\n        url\n      });\n    }\n\n    ;\n  }\n\n  ;\n  const deckCards = cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(`${url}cards/${card.id}/edit`),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteHandler(card),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Cards:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          fontSize: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Front:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Back:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), deckCards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c = ShowCards;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowCards\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Deck/DeckCards.js"],"names":["React","deleteCard","ShowCards","cards","url","history","deleteHandler","card","abortController","AbortController","confirm","window","id","signal","location","reload","abort","push","deckCards","map","index","front","back","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAnB,EAA4C;AAEvD;AACA,iBAAeC,aAAf,CAA6BC,IAA7B,EAAmC;AAE/B;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CAH+B,CAK/B;;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,kCAAf,CAAhB,CAN+B,CAQ/B;;AACA,QAAIA,OAAJ,EAAa;AACTT,MAAAA,UAAU,CAACM,IAAI,CAACK,EAAN,EAAUJ,eAAe,CAACK,MAA1B,CAAV;AACAF,MAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AAEA,aAAO,MAAMP,eAAe,CAACQ,KAAhB,EAAb;AACH,KALD,MAKO;AACHX,MAAAA,OAAO,CAACY,IAAR,CAAa;AAACb,QAAAA;AAAD,OAAb;AACH;;AAAA;AACJ;;AAAA;AAED,QAAMc,SAAS,GAAGf,KAAK,CAACgB,GAAN,CAAU,CAACZ,IAAD,EAAOa,KAAP,kBACxB;AAAA,2BACI;AAAA,8BACI;AAAA,kBAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKd,IAAI,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAMjB,OAAO,CAACY,IAAR,CAAc,GAAEb,GAAI,SAAQG,IAAI,CAACK,EAAG,OAApC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,MAAMN,aAAa,CAACC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,OAASa,KAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADc,CAAlB;AAaA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACA;AAAI,QAAA,KAAK,EAAE;AAACG,UAAAA,QAAQ,EAAE;AAAX,SAAX;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAUKL,SAVL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;KAjDuBhB,S;AAiDvB","sourcesContent":["import React from \"react\";\r\nimport { deleteCard } from \"../utils/api/index\";\r\n\r\n/*This function will:\r\n    1)Take in cards and URL (for buttons)\r\n    2)Map through them and return the JSX for each card\r\n        Buttons should include:\r\n            Edit card\r\n            Delete\r\n*/\r\nexport default function ShowCards({ cards, url, history }) {\r\n\r\n    //delete handler\r\n    async function deleteHandler(card) {\r\n\r\n        //Abort controller for deleteDeck API call\r\n        const abortController = new AbortController()\r\n\r\n        //Confirm window to make sure they want to delete deck\r\n        const confirm = window.confirm(\"Do you want to delete this deck?\");\r\n\r\n        //If \"ok\" clicked, delete the deck and refresh the home screen\r\n        if (confirm) {\r\n            deleteCard(card.id, abortController.signal);\r\n            window.location.reload();\r\n\r\n            return () => abortController.abort();\r\n        } else {\r\n            history.push({url});\r\n        };\r\n    };\r\n\r\n    const deckCards = cards.map((card, index) => (\r\n        <tbody>\r\n            <tr key={index}>\r\n                <td>{card.front}</td>\r\n                <td>{card.back}</td>\r\n                <button onClick={() => history.push(`${url}cards/${card.id}/edit`)}>Edit</button>\r\n                <br />\r\n                <button onClick={() => deleteHandler(card)}>Delete</button>\r\n                <br />\r\n            </tr>\r\n        </tbody>\r\n    ));\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <th>Cards:</th>\r\n            </thead>\r\n            <thead>\r\n            <tr style={{fontSize: 20}}>\r\n                <td>Front:</td>\r\n                <td>Back:</td>\r\n            </tr>\r\n            </thead>\r\n            {deckCards}\r\n        </table>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}