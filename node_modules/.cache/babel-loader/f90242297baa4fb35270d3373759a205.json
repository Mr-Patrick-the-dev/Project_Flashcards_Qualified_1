{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\CreateDeck\\\\DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createDeck, updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DeckForm({\n  deck,\n  deckFunction\n}) {\n  _s();\n\n  //deck will have either the pre-filled default deck (new) or the current deck info (edit)\n  //Grab history for later use\n  const history = useHistory(); //Set new blank deck state\n\n  const [newDeck, setNewDeck] = useState(deck); //changeHandler\n\n  const changeHandler = ({\n    target\n  }) => {\n    setNewDeck({ ...newDeck,\n      [target.name]: target.value\n    });\n  }; //submitHandler\n\n\n  const submitHandler = (event, newDeck) => {\n    event.preventDefault(); //Abort controller for deckFunction API call\n\n    const abortController = new AbortController(); //use function passed from page\n\n    const submittedDeck = deckFunction(newDeck, abortController.signal);\n    setNewDeck(deck);\n    history.push(`/decks/${submittedDeck.id}/`); //Abort controller\n\n    return () => abortController.abort();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => submitHandler(newDeck),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        onChange: changeHandler,\n        placeholder: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        onChange: changeHandler,\n        placeholder: deck.description,\n        rows: 8,\n        cols: 45\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => history.push(\"/\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeckForm, \"4wg8c5t+tVYSVBQrp0AHKBgJVEY=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/CreateDeck/DeckForm.js"],"names":["React","useState","useHistory","createDeck","updateDeck","DeckForm","deck","deckFunction","history","newDeck","setNewDeck","changeHandler","target","name","value","submitHandler","event","preventDefault","abortController","AbortController","submittedDeck","signal","push","id","abort","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAA0C;AAAA;;AACrD;AAEA;AACA,QAAMC,OAAO,GAAGN,UAAU,EAA1B,CAJqD,CAMrD;;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACK,IAAD,CAAtC,CAPqD,CASrD;;AACA,QAAMK,aAAa,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAClCF,IAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEP,OAACG,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAFf,KAAD,CAAV;AAIH,GALD,CAVqD,CAiBrD;;;AACA,QAAMC,aAAa,GAAG,CAACC,KAAD,EAAQP,OAAR,KAAoB;AACtCO,IAAAA,KAAK,CAACC,cAAN,GADsC,CAGtC;;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CAJsC,CAMtC;;AACA,UAAMC,aAAa,GAAGb,YAAY,CAACE,OAAD,EAAUS,eAAe,CAACG,MAA1B,CAAlC;AACAX,IAAAA,UAAU,CAACJ,IAAD,CAAV;AACAE,IAAAA,OAAO,CAACc,IAAR,CAAc,UAASF,aAAa,CAACG,EAAG,GAAxC,EATsC,CAWtC;;AACA,WAAO,MAAML,eAAe,CAACM,KAAhB,EAAb;AACH,GAbD;;AAeA,sBACI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAE,MAAMT,aAAa,CAACN,OAAD,CAAnC;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGQ;AACA,QAAA,EAAE,EAAC,MADH;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,QAAQ,EAAEE,aAJV;AAMA,QAAA,WAAW,EAAEL,IAAI,CAACO;AANlB;AAAA;AAAA;AAAA;AAAA,cAHR,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcQ;AACA,QAAA,EAAE,EAAC,aADH;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,QAAQ,EAAEF,aAHV;AAKA,QAAA,WAAW,EAAEL,IAAI,CAACmB,WALlB;AAMA,QAAA,IAAI,EAAE,CANN;AAOA,QAAA,IAAI,EAAE;AAPN;AAAA;AAAA;AAAA;AAAA,cAdR,eAuBI;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAwBI;AAAA,gCACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAQ,UAAA,OAAO,EAAE,MAAMjB,OAAO,CAACc,IAAR,CAAa,GAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAmCH;;GApEuBjB,Q;UAIJH,U;;;KAJIG,Q;AAoEvB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createDeck, updateDeck } from \"../utils/api/index\";\r\n\r\nexport default function DeckForm({ deck, deckFunction }) {\r\n    //deck will have either the pre-filled default deck (new) or the current deck info (edit)\r\n\r\n    //Grab history for later use\r\n    const history = useHistory();\r\n\r\n    //Set new blank deck state\r\n    const [newDeck, setNewDeck] = useState(deck);\r\n\r\n    //changeHandler\r\n    const changeHandler = ({ target }) => {\r\n        setNewDeck({\r\n            ...newDeck,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n    \r\n    //submitHandler\r\n    const submitHandler = (event, newDeck) => {\r\n        event.preventDefault();\r\n\r\n        //Abort controller for deckFunction API call\r\n        const abortController = new AbortController()\r\n\r\n        //use function passed from page\r\n        const submittedDeck = deckFunction(newDeck, abortController.signal);\r\n        setNewDeck(deck);\r\n        history.push(`/decks/${submittedDeck.id}/`);\r\n\r\n        //Abort controller\r\n        return () => abortController.abort();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={() => submitHandler(newDeck)}>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <br />\r\n                <input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                onChange={changeHandler}\r\n                \r\n                placeholder={deck.name}\r\n                />\r\n            <br />\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <br />\r\n                <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                onChange={changeHandler}\r\n                \r\n                placeholder={deck.description}\r\n                rows={8}\r\n                cols={45}\r\n                />\r\n            <hr />\r\n            <div>\r\n            <button type=\"submit\">Submit</button>\r\n\r\n            <br />\r\n            <button onClick={() => history.push(\"/\")}>Cancel</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}