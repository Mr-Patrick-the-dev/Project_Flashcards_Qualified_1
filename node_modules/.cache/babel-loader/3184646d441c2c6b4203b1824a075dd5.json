{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Deck\\\\ShowDeck.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api/index\";\nimport NavBar from \"../NavBar/NavBar\";\n/*\r\n    This function will:\r\n        1)Take in deck and url (for buttons)\r\n        2)Display the name and description of the deck\r\n        3)Provide buttons for:\r\n            Edit\r\n            Study\r\n            Add cards\r\n            Delete\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowDeck({\n  deck,\n  url,\n  history\n}) {\n  //Extract properties from deck\n  const {\n    name,\n    description,\n    id\n  } = deck; //Create navigation object for NavBar\n\n  const navigation = {\n    Home: \"/\",\n    [name]: \" \"\n  }; //delete handler\n\n  async function deleteHandler(id) {\n    //Abort controller for deleteDeck API call\n    const abortController = new AbortController(); //Confirm window to make sure they want to delete deck\n\n    const confirm = window.confirm(\"Do you want to delete this deck?\"); //If \"ok\" clicked, delete the deck and refresh the home screen\n\n    if (confirm) {\n      deleteDeck(id, abortController.signal);\n      history.push(\"/\");\n      return () => abortController.abort();\n    } else {\n      history.push({\n        url\n      });\n    }\n\n    ;\n  }\n\n  ; //Call history to use later\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      navigation: navigation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deckBtn\",\n      onClick: () => history.push(`${url}edit`),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deckBtn\",\n      onClick: () => history.push(`${url}study`),\n      children: \"Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deckBtn\",\n      onClick: () => history.push(`${url}cards/new`),\n      children: \"Add Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deckBtn\",\n      onClick: () => deleteHandler(id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = ShowDeck;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDeck\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Deck/ShowDeck.js"],"names":["React","useHistory","deleteDeck","NavBar","ShowDeck","deck","url","history","name","description","id","navigation","Home","deleteHandler","abortController","AbortController","confirm","window","signal","push","abort"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,CAAlB,EAAyC;AAEpD;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,MAA4BL,IAAlC,CAHoD,CAKpD;;AACA,QAAMM,UAAU,GAAG;AAACC,IAAAA,IAAI,EAAE,GAAP;AAAY,KAACJ,IAAD,GAAQ;AAApB,GAAnB,CANoD,CAQpD;;AACA,iBAAeK,aAAf,CAA6BH,EAA7B,EAAiC;AAE7B;AACA,UAAMI,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CAH6B,CAK7B;;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,kCAAf,CAAhB,CAN6B,CAQ7B;;AACA,QAAIA,OAAJ,EAAa;AACTd,MAAAA,UAAU,CAACQ,EAAD,EAAKI,eAAe,CAACI,MAArB,CAAV;AACAX,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AAEA,aAAO,MAAML,eAAe,CAACM,KAAhB,EAAb;AACH,KALD,MAKO;AACHb,MAAAA,OAAO,CAACY,IAAR,CAAa;AAACb,QAAAA;AAAD,OAAb;AACH;;AAAA;AACJ;;AAAA,GA1BmD,CA4BpD;;AAEA,sBACI;AAAA,4BACA,QAAC,MAAD;AACA,MAAA,UAAU,EAAEK;AADZ;AAAA;AAAA;AAAA;AAAA,YADA,eAGA;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAIF,OAAO,CAACY,IAAR,CAAc,GAAEb,GAAI,MAApB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAIC,OAAO,CAACY,IAAR,CAAc,GAAEb,GAAI,OAApB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAIC,OAAO,CAACY,IAAR,CAAc,GAAEb,GAAI,WAApB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAQA;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAKO,aAAa,CAACH,EAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA,kBADJ;AAYH;KA1CuBN,Q;AA0CvB","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../utils/api/index\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\n\r\n/*\r\n    This function will:\r\n        1)Take in deck and url (for buttons)\r\n        2)Display the name and description of the deck\r\n        3)Provide buttons for:\r\n            Edit\r\n            Study\r\n            Add cards\r\n            Delete\r\n*/\r\n\r\nexport default function ShowDeck({ deck, url, history}) {\r\n\r\n    //Extract properties from deck\r\n    const { name, description, id } = deck;\r\n\r\n    //Create navigation object for NavBar\r\n    const navigation = {Home: \"/\", [name]: \" \"};\r\n\r\n    //delete handler\r\n    async function deleteHandler(id) {\r\n\r\n        //Abort controller for deleteDeck API call\r\n        const abortController = new AbortController()\r\n\r\n        //Confirm window to make sure they want to delete deck\r\n        const confirm = window.confirm(\"Do you want to delete this deck?\");\r\n\r\n        //If \"ok\" clicked, delete the deck and refresh the home screen\r\n        if (confirm) {\r\n            deleteDeck(id, abortController.signal);\r\n            history.push(\"/\");\r\n\r\n            return () => abortController.abort();\r\n        } else {\r\n            history.push({url});\r\n        };\r\n    };\r\n\r\n    //Call history to use later\r\n    \r\n    return (\r\n        <>\r\n        <NavBar \r\n        navigation={navigation} />\r\n        <h3>{name}</h3>\r\n        <p>{description}</p>\r\n        <button className=\"deckBtn\" onClick={()=>history.push(`${url}edit`)}>Edit</button>\r\n        <button className=\"deckBtn\" onClick={()=>history.push(`${url}study`)}>Study</button>\r\n        <button className=\"deckBtn\" onClick={()=>history.push(`${url}cards/new`)}>Add Cards</button>\r\n        <button className=\"deckBtn\" onClick={()=>(deleteHandler(id))}>Delete</button>\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}