{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\CreateDeck\\\\DeckForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createDeck, updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DeckForm({\n  deck,\n  deckFunction\n}) {\n  _s();\n\n  //deck will have either the pre-filled default deck (new) or the current deck info (edit)\n  //Grab history for later use\n  const history = useHistory(); //Set new blank deck state\n\n  const [newDeck, setNewDeck] = useState(deck); //changeHandler\n\n  const changeHandler = ({\n    target\n  }) => {\n    setNewDeck({ ...newDeck,\n      [target.name]: target.value\n    });\n  }; //submitHandleronSubmit={() => submitHandler(newDeck)}\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        onChange: changeHandler,\n        value: newDeck.name,\n        placeholder: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"description\",\n        name: \"description\",\n        type: \"textarea\",\n        onChange: changeHandler,\n        value: newDeck.description,\n        placeholder: deck.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeckForm, \"4wg8c5t+tVYSVBQrp0AHKBgJVEY=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/CreateDeck/DeckForm.js"],"names":["React","useState","useHistory","createDeck","updateDeck","DeckForm","deck","deckFunction","history","newDeck","setNewDeck","changeHandler","target","name","value","description","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAA0C;AAAA;;AACrD;AAEA;AACA,QAAMC,OAAO,GAAGN,UAAU,EAA1B,CAJqD,CAMrD;;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACK,IAAD,CAAtC,CAPqD,CASrD;;AACA,QAAMK,aAAa,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAClCF,IAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEP,OAACG,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAFf,KAAD,CAAV;AAIH,GALD,CAVqD,CAiBrD;;;AAGA,sBACI;AAAA,2BACA;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGQ;AACA,QAAA,EAAE,EAAC,MADH;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,QAAQ,EAAEH,aAJV;AAKA,QAAA,KAAK,EAAEF,OAAO,CAACI,IALf;AAMA,QAAA,WAAW,EAAEP,IAAI,CAACO;AANlB;AAAA;AAAA;AAAA;AAAA,cAHR,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcQ;AACA,QAAA,EAAE,EAAC,aADH;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,IAAI,EAAC,UAHL;AAIA,QAAA,QAAQ,EAAEF,aAJV;AAKA,QAAA,KAAK,EAAEF,OAAO,CAACM,WALf;AAMA,QAAA,WAAW,EAAET,IAAI,CAACS;AANlB;AAAA;AAAA;AAAA;AAAA,cAdR,eAsBI;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAwBI;AAAQ,QAAA,OAAO,EAAE,MAAMP,OAAO,CAACQ,IAAR,CAAa,GAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA8BH;;GAlDuBX,Q;UAIJH,U;;;KAJIG,Q;AAkDvB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createDeck, updateDeck } from \"../utils/api/index\";\r\n\r\nexport default function DeckForm({ deck, deckFunction }) {\r\n    //deck will have either the pre-filled default deck (new) or the current deck info (edit)\r\n\r\n    //Grab history for later use\r\n    const history = useHistory();\r\n\r\n    //Set new blank deck state\r\n    const [newDeck, setNewDeck] = useState(deck);\r\n\r\n    //changeHandler\r\n    const changeHandler = ({ target }) => {\r\n        setNewDeck({\r\n            ...newDeck,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n    \r\n    //submitHandleronSubmit={() => submitHandler(newDeck)}\r\n\r\n\r\n    return (\r\n        <>\r\n        <form >\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <br />\r\n                <input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                onChange={changeHandler}\r\n                value={newDeck.name}\r\n                placeholder={deck.name}\r\n                />\r\n            <br />\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <br />\r\n                <input\r\n                id=\"description\"\r\n                name=\"description\"\r\n                type=\"textarea\"\r\n                onChange={changeHandler}\r\n                value={newDeck.description}\r\n                placeholder={deck.description}\r\n                />\r\n            <hr />\r\n            <button type=\"submit\">Submit</button>\r\n            <button onClick={() => history.push(\"/\")}>Cancel</button>\r\n        </form>\r\n        </>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}