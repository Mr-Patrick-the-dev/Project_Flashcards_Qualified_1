{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"../Home/Home\";\nimport HostDeck from \"../Deck/Deck\";\nimport CreateDeck from \"../CreateDeck/CreateDeck\";\nimport { listDecks } from \"../utils/api/index\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  //Initial state for decks\n  const initialDecks = []; //Set state for decks\n\n  const [decks, setDecks] = useState(initialDecks); //Load the decks and cards to be displayed after initial render\n\n  useEffect(() => {\n    //Set decks And Cards to empty values\n    setDecks(initialDecks); //Abort controller for API fetch\n\n    const abortController = new AbortController(); //Load the cards and decks\n\n    async function getDecks() {\n      try {\n        const pulledDecks = await listDecks(abortController.signal);\n        setDecks(pulledDecks);\n      } catch (error) {\n        //Handle the error\n        if (error == \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ; //Call getDecksAndCards\n\n    getDecks(); //Abort Controller return\n\n    return () => abortController.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(CreateDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId\",\n          children: /*#__PURE__*/_jsxDEV(HostDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Layout, \"cVs4poSL9YoabqmLhZKHxA8V9Ws=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","Header","NotFound","Home","HostDeck","CreateDeck","listDecks","Route","Switch","Layout","initialDecks","decks","setDecks","useState","useEffect","abortController","AbortController","getDecks","pulledDecks","signal","error","console","log","abort"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEhB;AACA,QAAMC,YAAY,GAAG,EAArB,CAHgB,CAKf;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAACH,YAAD,CAAlC,CANe,CAQf;;AACAI,EAAAA,SAAS,CAAC,MAAM;AACf;AACAF,IAAAA,QAAQ,CAACF,YAAD,CAAR,CAFe,CAIf;;AACA,UAAMK,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CALe,CAOf;;AACA,mBAAeC,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,WAAW,GAAG,MAAMZ,SAAS,CAACS,eAAe,CAACI,MAAjB,CAAnC;AACAP,QAAAA,QAAQ,CAACM,WAAD,CAAR;AACH,OAHD,CAGE,OAAOE,KAAP,EAAc;AACZ;AACA,YAAIA,KAAK,IAAE,YAAX,EAAyB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,SAFD,MAEO;AACH,gBAAMF,KAAN;AACH;;AAAA;AACJ;;AAAA;AACJ;;AAAA,KApBc,CAsBf;;AACAH,IAAAA,QAAQ,GAvBO,CAyBf;;AACA,WAAO,MAAMF,eAAe,CAACQ,KAAhB,EAAb;AACH,GA3BW,EA2BV,EA3BU,CAAT;AA6BD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAEE,QAAC,MAAD;AAAA,gCAEA,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,IAAd;AAAoB,UAAA,IAAI,EAAC,GAAzB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEZ;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFA,eAMA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANA,eAUA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVA,eAcA,QAAC,KAAD;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA2BD;;GAjEQF,M;;KAAAA,M;AAmET,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"../Home/Home\";\nimport HostDeck from \"../Deck/Deck\";\nimport CreateDeck from \"../CreateDeck/CreateDeck\";\nimport { listDecks } from \"../utils/api/index\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction Layout() {\n\n  //Initial state for decks\n  const initialDecks = [];\n  \n   //Set state for decks\n   const [decks, setDecks] = useState(initialDecks);\n  \n   //Load the decks and cards to be displayed after initial render\n   useEffect(() => {\n    //Set decks And Cards to empty values\n    setDecks(initialDecks);\n\n    //Abort controller for API fetch\n    const abortController = new AbortController();\n\n    //Load the cards and decks\n    async function getDecks() {\n        try {\n            const pulledDecks = await listDecks(abortController.signal)\n            setDecks(pulledDecks);\n        } catch (error) {\n            //Handle the error\n            if (error==\"AbortError\") {\n                console.log(\"Aborted\");\n            } else {\n                throw error;\n            };\n        };\n    };\n\n    //Call getDecksAndCards\n    getDecks()\n\n    //Abort Controller return\n    return () => abortController.abort();\n},[]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n\n        <Route exact={true} path=\"/\">\n          <Home decks={decks} />\n        </Route>\n\n        <Route path=\"/decks/new\">\n          <CreateDeck /> \n        </Route>\n\n        <Route path=\"/decks/:deckId\">\n          <HostDeck />\n        </Route>\n\n        <Route>\n          <NotFound />\n        </Route>\n\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}