{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\EditCard\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readCard } from \"../utils/api/index\";\nimport CardForm from \"../AddCard/CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditCard() {\n  _s();\n\n  //Gather the Card Id\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  console.log(deckId); //Set an initial card\n\n  const initialCard = {\n    front: \"\",\n    back: \"\"\n  }; //Create a state for the card to be passed to the card form\n\n  const [card, setCard] = useState(initialCard);\n  useEffect(() => {\n    //Reset the card\n    setCard(initialCard); //Abort Controller\n\n    const abortController = new AbortController(); //Gather cards for deck\n\n    async function getTheCard() {\n      try {\n        const thisCard = readCard(cardId, abortController.signal);\n        thisCard.then(result => {\n          setCard(result);\n        });\n      } catch (error) {\n        if (error == \"AbortError\") {\n          console.log(error);\n        } else {\n          throw error;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    getTheCard();\n    return () => abortController.abort();\n  }, [cardId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      card: card,\n      deckId: deckId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditCard, \"qczekNf6NtdKVE5vvlBKzLKcVcw=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/Project_Flashcards_Qualified_1/src/EditCard/EditCard.js"],"names":["React","useState","useEffect","useParams","readCard","CardForm","EditCard","deckId","cardId","console","log","initialCard","front","back","card","setCard","abortController","AbortController","getTheCard","thisCard","signal","then","result","error","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBL,SAAS,EAApC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAL+B,CAO/B;;AACA,QAAMI,WAAW,GAAC;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAlB,CAR+B,CAS/B;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACU,WAAD,CAAhC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAa,IAAAA,OAAO,CAACJ,WAAD,CAAP,CAFY,CAIZ;;AACA,UAAMK,eAAe,GAAG,IAAIC,eAAJ,EAAxB,CALY,CAOZ;;AACA,mBAAeC,UAAf,GAA4B;AACxB,UAAG;AACC,cAAMC,QAAQ,GAAGf,QAAQ,CAACI,MAAD,EAASQ,eAAe,CAACI,MAAzB,CAAzB;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAeC,MAAD,IAAW;AACrBP,UAAAA,OAAO,CAACO,MAAD,CAAP;AACH,SAFD;AAGH,OALD,CAKE,OAAOC,KAAP,EAAc;AACZ,YAAIA,KAAK,IAAE,YAAX,EAAyB;AACrBd,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,SAFD,MAEO;AACH,gBAAMA,KAAN;AACH;;AAAA;AACJ;;AAAA;AACJ;;AAAA;AAEDL,IAAAA,UAAU;AAEV,WAAO,MAAMF,eAAe,CAACQ,KAAhB,EAAb;AACH,GA1BQ,EA0BN,CAAChB,MAAD,CA1BM,CAAT;AA4BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAW,MAAA,IAAI,EAAEM,IAAjB;AAAuB,MAAA,MAAM,EAAEP;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH;;GA/CuBD,Q;UAGOH,S;;;KAHPG,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readCard } from \"../utils/api/index\";\r\nimport CardForm from \"../AddCard/CardForm\";\r\n\r\nexport default function EditCard() {\r\n\r\n    //Gather the Card Id\r\n    const { deckId, cardId } = useParams();\r\n\r\n    console.log(deckId)\r\n\r\n    //Set an initial card\r\n    const initialCard={front: \"\", back: \"\"}\r\n    //Create a state for the card to be passed to the card form\r\n    const [card, setCard] = useState(initialCard);\r\n\r\n    useEffect(() => {\r\n        //Reset the card\r\n        setCard(initialCard);\r\n        \r\n        //Abort Controller\r\n        const abortController = new AbortController();\r\n\r\n        //Gather cards for deck\r\n        async function getTheCard() {\r\n            try{\r\n                const thisCard = readCard(cardId, abortController.signal);\r\n                thisCard.then((result)=> {\r\n                    setCard(result);\r\n                });\r\n            } catch (error) {\r\n                if (error==\"AbortError\") {\r\n                    console.log(error);\r\n                } else {\r\n                    throw error;\r\n                };\r\n            };\r\n        };\r\n\r\n        getTheCard();\r\n\r\n        return () => abortController.abort();\r\n    }, [cardId])\r\n\r\n    return (\r\n        <>\r\n            <h2>Edit Card</h2>\r\n            <CardForm  card={card} deckId={deckId} />\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}